{"version":3,"file":"static/js/442.8e8bcbfc.chunk.js","mappings":"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","sources":["webpack://game-store/./src/components/GoHomeButton/styles.module.scss?5b9c","components/GoHomeButton/GoHomeButton.tsx","webpack://game-store/./src/components/Header/styles.module.scss?5572","webpack://game-store/./src/components/Header/ProfileDropMenu/styles.module.scss?5fd4","webpack://game-store/./src/components/Header/ProfileDropMenu/Item/styles.module.scss?fddb","components/Header/ProfileDropMenu/Item/Item.tsx","firebase/auth/signOut.ts","components/Header/ProfileDropMenu/ProfileDropMenu.tsx","components/Header/Header.tsx","webpack://game-store/./src/pages/Not-Found/styles.module.scss?a8c4","pages/Not-Found/Not-Found.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"styles_button__STCMt\"};","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype PropsType = {\r\n    text: string\r\n    funcNavigateTo: any\r\n}\r\n\r\nconst GoHomeButton:React.FC<PropsType> = ({text, funcNavigateTo}) => {\r\n  return (\r\n    <button type='button' className={styles.button} onClick={funcNavigateTo}>\r\n        {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(GoHomeButton)","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"styles_header__CcvTA\",\"container\":\"styles_container__nzd23\",\"logo\":\"styles_logo__QOZOh\",\"sony_block\":\"styles_sony_block__ONUqh\",\"outer_profile_bloсk\":\"styles_outer_profile_bloсk__qPFwj\",\"profile_block\":\"styles_profile_block__FmnhA\",\"profile_block_image\":\"styles_profile_block_image__G4p8m\",\"underline\":\"styles_underline__2g06Q\",\"text\":\"styles_text__m60Q+\",\"text_menu\":\"styles_text_menu__OYGMy\"};","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"styles_items__e4rl6\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"styles_block__F0Jk1\",\"text\":\"styles_text__Rxllz\",\"img\":\"styles_img__6wbxr\"};","import React from 'react'\r\nimport { IDropMenuItem } from '../../../../interfaces/interfaces'\r\nimport styles from './styles.module.scss'\r\n\r\nconst Item:React.FC<IDropMenuItem> = ({name, image, funcToDo}) => {\r\n  return (\r\n    <div className={styles.block} onClick={funcToDo}>\r\n        <img alt={name} src={process.env.PUBLIC_URL + image} className={styles.img} />\r\n        <p className={styles.text}>{name}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import { auth } from \"../firebaseConfig\"\r\nimport { signOut } from \"firebase/auth\"\r\n\r\nconst logOut:() => Promise<void> = async () => {\r\n    await signOut(auth)\r\n}\r\n\r\nexport { logOut } ","import React, {useMemo} from 'react'\r\n\r\nimport DropMenu from \"../../Modals/DropMenu/DropMenu\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport homeRoutes from \"../../../constants/homeRoutes\";\r\nimport { IDropMenuItem } from '../../../interfaces/interfaces'\r\nimport styles from './styles.module.scss'\r\nimport Item from './Item/Item'\r\nimport { logOut } from '../../../firebase/auth/signOut'\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks'\r\nimport { removeUser } from '../../../redux/slices/userSlice/userSlice'\r\n\r\ntype Props = {\r\n    activeModal: boolean\r\n    setActiveModal: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\nconst ProfileDropMenu: React.FC<Props> = ({ activeModal, setActiveModal }) => {\r\n\r\n    //profile | cart | favourite | History | Exit\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const currentUser = useAppSelector(state => state.user.user)\r\n\r\n\r\n    const removeSignedUser = async () => {\r\n        await logOut()\r\n        dispatch(removeUser())\r\n        setActiveModal(false)\r\n    }\r\n    const navigateToSomewhere = (link:string) => {\r\n        setActiveModal(false)\r\n        setTimeout(() => {\r\n            navigate(link)\r\n        }, 300)\r\n    }\r\n\r\n\r\n    const dropMenuItems: IDropMenuItem[] = [\r\n        {\r\n            name: 'Profile',\r\n            image: '/images/user-icon.png',\r\n            funcToDo: () => navigateToSomewhere(`/profile/${currentUser.uid}`)\r\n        },\r\n        {\r\n            name: 'Favorite',\r\n            image: '/images/heart-uncolored.png',\r\n            funcToDo: () => navigateToSomewhere(`/${homeRoutes.FAVORITE}`)\r\n        },\r\n        {\r\n            name: 'My games',\r\n            image: '/images/shopping-cart-icon.png',\r\n            funcToDo: () => navigateToSomewhere(`/${homeRoutes.MY_GAMES}`)\r\n        },\r\n        {\r\n            name: 'History',\r\n            image: '/images/history-icon.png',\r\n            funcToDo:  () => navigateToSomewhere(`/${homeRoutes.HISTORY}`)\r\n        },\r\n        {\r\n            name: 'Exit',\r\n            image: '/images/exit-icon.png',\r\n            funcToDo: removeSignedUser\r\n        },\r\n    ]\r\n\r\n    const allItems = useMemo(() => dropMenuItems.map((elem, id) => <Item key={id} {...elem} />), [dropMenuItems])\r\n\r\n    const topAnimation: string = activeModal ? '35px' : '10px'\r\n    return (\r\n        <DropMenu\r\n            activeModal={activeModal}\r\n            setActiveModal={setActiveModal}\r\n            topAnimation={topAnimation}\r\n            rigthPosition='-10px'\r\n        >\r\n            <div className={styles.items}>\r\n                {allItems}\r\n            </div>\r\n        </DropMenu>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProfileDropMenu)\r\n","import React from 'react'\r\nimport styles from './styles.module.scss';\r\nimport ROUTES from '../../constants/pagesRoutes'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { auth } from '../../firebase/firebaseConfig';\r\nimport { useState } from 'react';\r\nimport ProfileDropMenu from './ProfileDropMenu/ProfileDropMenu';\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const navigate = useNavigate()\r\n  const user = useAppSelector(state => state.user.user)\r\n  const [isHovered, setIsHovered] = useState<boolean>(false)\r\n  const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.container}>\r\n        <img alt=\"logo\" src={process.env.PUBLIC_URL + \"/images/logo.png\"} className={styles.logo} onClick={() => navigate(ROUTES.HOME)} />\r\n        <div className={styles.sony_block}>\r\n          <img alt='sony' src={process.env.PUBLIC_URL + '/images/sony.png'} className={styles.sony_black_image}/>\r\n        </div>\r\n        {\r\n          auth.currentUser ?\r\n            (\r\n              <div className={styles.outer_profile_bloсk}>\r\n                <div\r\n                  className={styles.profile_block}\r\n                  onMouseEnter={() => setIsHovered(true)}\r\n                  onMouseLeave={() => setIsHovered(false)}\r\n                  onClick={() => setActiveModal(true)}\r\n                >\r\n                  <img alt='user' src={`${user?.image || process.env.PUBLIC_URL + '/images/profile.png'}`} className={styles.profile_block_image} />\r\n                  <p className={`${styles.text} ${isHovered && styles.underline}`}>{user.username}</p>\r\n                </div>\r\n                <ProfileDropMenu\r\n                  activeModal={activeModal}\r\n                  setActiveModal={setActiveModal}\r\n                />\r\n              </div>\r\n            )\r\n            :\r\n            (\r\n              <p className={styles.text} onClick={() => navigate(`/${ROUTES.LOG_IN}`)}>Log in</p>\r\n            )\r\n        }\r\n\r\n      </div>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default React.memo(Header)","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"styles_section__cbYHY\",\"container\":\"styles_container__C7PaY\",\"image\":\"styles_image__H12Lm\",\"error\":\"styles_error__D+33E\",\"text\":\"styles_text__qkPkO\"};","import React from 'react'\r\nimport Header from '../../components/Header/Header'\r\nimport styles from './styles.module.scss'\r\nimport GoHomeButton from '../../components/GoHomeButton/GoHomeButton'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport PagesRoutes from '../../constants/pagesRoutes'\r\n\r\nconst ForbiddenPage: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <Header />\r\n            <section className={styles.section}>\r\n                <div className={styles.container}>\r\n                    <img alt='forbidden' src={process.env.PUBLIC_URL + '/images/404-icon.png'} className={styles.image} />\r\n                    <h1 className={styles.error}>Error 404 </h1>\r\n                    <h1 className={styles.text}>Not Found</h1>\r\n                    <GoHomeButton text='Go Home' funcNavigateTo={() => navigate(PagesRoutes.HOME)} />\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ForbiddenPage)"],"names":["GoHomeButton","text","funcNavigateTo","type","className","styles","onClick","React","Item","name","image","funcToDo","alt","src","process","logOut","signOut","auth","ProfileDropMenu","activeModal","setActiveModal","dispatch","useAppDispatch","navigate","useNavigate","currentUser","useAppSelector","state","user","removeSignedUser","removeUser","navigateToSomewhere","link","setTimeout","dropMenuItems","uid","homeRoutes","allItems","useMemo","map","elem","id","topAnimation","DropMenu","rigthPosition","Header","useState","isHovered","setIsHovered","ROUTES","onMouseEnter","onMouseLeave","username","ForbiddenPage","PagesRoutes"],"sourceRoot":""}