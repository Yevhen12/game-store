{"version":3,"file":"static/js/862.41f9f844.chunk.js","mappings":"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","sources":["webpack://game-store/./src/components/Header/styles.module.scss?5572","webpack://game-store/./src/components/Header/ProfileDropMenu/styles.module.scss?5fd4","webpack://game-store/./src/components/Header/ProfileDropMenu/Item/styles.module.scss?fddb","components/Header/ProfileDropMenu/Item/Item.tsx","firebase/auth/signOut.ts","components/Header/ProfileDropMenu/ProfileDropMenu.tsx","components/Header/Header.tsx","firebase/auth/isEmailExist.ts","firebase/auth/isUsernameAvailable.ts","helpers/createDate.ts","firebase/auth/createUser.ts","pages/SignUp/SignUpForm/SignUpForm.tsx","pages/SignUp/SignUp.tsx","webpack://game-store/./src/pages/LogIn/components/LoginForm/styles.module.scss?46c4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"styles_header__CcvTA\",\"container\":\"styles_container__nzd23\",\"logo\":\"styles_logo__QOZOh\",\"sony_block\":\"styles_sony_block__ONUqh\",\"outer_profile_bloсk\":\"styles_outer_profile_bloсk__qPFwj\",\"profile_block\":\"styles_profile_block__FmnhA\",\"profile_block_image\":\"styles_profile_block_image__G4p8m\",\"underline\":\"styles_underline__2g06Q\",\"text\":\"styles_text__m60Q+\",\"text_menu\":\"styles_text_menu__OYGMy\"};","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"styles_items__e4rl6\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"styles_block__F0Jk1\",\"text\":\"styles_text__Rxllz\",\"img\":\"styles_img__6wbxr\"};","import React from 'react'\r\nimport { IDropMenuItem } from '../../../../interfaces/interfaces'\r\nimport styles from './styles.module.scss'\r\n\r\nconst Item:React.FC<IDropMenuItem> = ({name, image, funcToDo}) => {\r\n  return (\r\n    <div className={styles.block} onClick={funcToDo}>\r\n        <img alt={name} src={process.env.PUBLIC_URL + image} className={styles.img} />\r\n        <p className={styles.text}>{name}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import { auth } from \"../firebaseConfig\"\r\nimport { signOut } from \"firebase/auth\"\r\n\r\nconst logOut:() => Promise<void> = async () => {\r\n    await signOut(auth)\r\n}\r\n\r\nexport { logOut } ","import React from 'react'\r\n\r\nimport DropMenu from \"../../Modals/DropMenu/DropMenu\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport homeRoutes from \"../../../constants/homeRoutes\";\r\nimport { IDropMenuItem } from '../../../interfaces/interfaces'\r\nimport styles from './styles.module.scss'\r\nimport Item from './Item/Item'\r\nimport { logOut } from '../../../firebase/auth/signOut'\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks'\r\nimport { removeUser } from '../../../redux/slices/userSlice/userSlice'\r\n\r\ntype Props = {\r\n    activeModal: boolean\r\n    setActiveModal: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\nconst ProfileDropMenu: React.FC<Props> = ({ activeModal, setActiveModal }) => {\r\n\r\n    //profile | cart | favourite | History | Exit\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const currentUser = useAppSelector(state => state.user.user)\r\n\r\n\r\n    const removeSignedUser = async () => {\r\n        await logOut()\r\n        dispatch(removeUser())\r\n        setActiveModal(false)\r\n    }\r\n    const navigateToSomewhere = (link:string) => {\r\n        setActiveModal(false)\r\n        setTimeout(() => {\r\n            navigate(link)\r\n        }, 300)\r\n    }\r\n\r\n\r\n    const dropMenuItems: IDropMenuItem[] = [\r\n        {\r\n            name: 'Profile',\r\n            image: '/images/user-icon.png',\r\n            funcToDo: () => navigateToSomewhere(`/profile/${currentUser.uid}`)\r\n        },\r\n        {\r\n            name: 'Favorite',\r\n            image: '/images/heart-uncolored.png',\r\n            funcToDo: () => navigateToSomewhere(`/${homeRoutes.FAVORITE}`)\r\n        },\r\n        {\r\n            name: 'My games',\r\n            image: '/images/shopping-cart-icon.png',\r\n            funcToDo: () => navigateToSomewhere(`/${homeRoutes.MY_GAMES}`)\r\n        },\r\n        {\r\n            name: 'History',\r\n            image: '/images/history-icon.png',\r\n            funcToDo:  () => navigateToSomewhere(`/${homeRoutes.HISTORY}`)\r\n        },\r\n        {\r\n            name: 'Exit',\r\n            image: '/images/exit-icon.png',\r\n            funcToDo: removeSignedUser\r\n        },\r\n    ]\r\n\r\n    const allItems = dropMenuItems.map((elem, id) => <Item key={id} {...elem} />)\r\n\r\n    const topAnimation: string = activeModal ? '35px' : '10px'\r\n    return (\r\n        <DropMenu\r\n            activeModal={activeModal}\r\n            setActiveModal={setActiveModal}\r\n            topAnimation={topAnimation}\r\n            rigthPosition='-10px'\r\n        >\r\n            <div className={styles.items}>\r\n                {allItems}\r\n            </div>\r\n        </DropMenu>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProfileDropMenu)\r\n","import React from 'react'\r\nimport styles from './styles.module.scss';\r\nimport ROUTES from '../../constants/pagesRoutes'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport { auth } from '../../firebase/firebaseConfig';\r\nimport { useState } from 'react';\r\nimport ProfileDropMenu from './ProfileDropMenu/ProfileDropMenu';\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const navigate = useNavigate()\r\n  const user = useAppSelector(state => state.user.user)\r\n  const [isHovered, setIsHovered] = useState<boolean>(false)\r\n  const [activeModal, setActiveModal] = useState<boolean>(false)\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.container}>\r\n        <img alt=\"logo\" src={process.env.PUBLIC_URL + \"/images/logo.png\"} className={styles.logo} onClick={() => navigate(ROUTES.HOME)} />\r\n        <div className={styles.sony_block}>\r\n          <img alt='sony' src={process.env.PUBLIC_URL + '/images/sony.png'} className={styles.sony_black_image}/>\r\n        </div>\r\n        {\r\n          auth.currentUser ?\r\n            (\r\n              <div className={styles.outer_profile_bloсk}>\r\n                <div\r\n                  className={styles.profile_block}\r\n                  onMouseEnter={() => setIsHovered(true)}\r\n                  onMouseLeave={() => setIsHovered(false)}\r\n                  onClick={() => setActiveModal(true)}\r\n                >\r\n                  <img alt='user' src={`${user?.image || process.env.PUBLIC_URL + '/images/profile.png'}`} className={styles.profile_block_image} />\r\n                  <p className={`${styles.text} ${isHovered && styles.underline}`}>{user.username}</p>\r\n                </div>\r\n                <ProfileDropMenu\r\n                  activeModal={activeModal}\r\n                  setActiveModal={setActiveModal}\r\n                />\r\n              </div>\r\n            )\r\n            :\r\n            (\r\n              <p className={styles.text} onClick={() => navigate(`/${ROUTES.LOG_IN}`)}>Log in</p>\r\n            )\r\n        }\r\n\r\n      </div>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default React.memo(Header)","import { collection, getDocs } from \"firebase/firestore\"\r\nimport { db } from \"../firebaseConfig\";\r\n\r\nconst isEmailAvailable: (email: string) => void = async (email) => {\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n\r\n    querySnapshot.forEach((doc) => {\r\n        if (doc.data().email === email) {\r\n            throw new Error('Such email already exist')\r\n        }\r\n    });\r\n}\r\n\r\nexport default isEmailAvailable","import { collection, getDocs } from \"firebase/firestore\"\r\nimport { db } from \"../firebaseConfig\";\r\n\r\nconst isUsernameAvailable: (username: string) => void = async (username) => {\r\n    const querySnapshot = await getDocs(collection(db, \"users\"));\r\n\r\n    querySnapshot.forEach((doc) => {\r\n        if (doc.data().username === username) {\r\n            console.log(doc.data().username)\r\n            throw new Error('Such username already exist')\r\n        }\r\n    });\r\n}\r\n\r\nexport default isUsernameAvailable","const createDate:() => string = () => {\r\n    return new Date().getTime().toString()\r\n}\r\n\r\nexport default createDate","import { auth, db } from '../firebaseConfig'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { ISignUp } from '../../interfaces/interfaces'\r\nimport { IUser } from '../../interfaces/interfaces'\r\nimport { setDoc, doc } from 'firebase/firestore'\r\nimport createDate from '../../helpers/createDate'\r\n\r\n\r\n\r\nconst createUser:(user: ISignUp) => Promise<string> = async (user) => {\r\n    const currentUser = await createUserWithEmailAndPassword(auth, user.email, user.password)\r\n    const docUser = doc(db, 'users', currentUser.user.uid)\r\n\r\n    const userToSet: IUser = {\r\n        ...user,\r\n        recentSearch: [],\r\n        createdAt: createDate(),\r\n        purchasesList: [],\r\n        uid: auth.currentUser?.uid || '',\r\n        bio: '',\r\n        image: '',\r\n        myGames: [],\r\n        favoriteGames: [],\r\n    }\r\n\r\n    await setDoc(docUser, userToSet)\r\n\r\n    return auth.currentUser?.uid || ''\r\n\r\n}\r\n\r\nexport default createUser","import React, { useState } from 'react'\r\nimport styles from '../../LogIn/components/LoginForm/styles.module.scss'\r\nimport ROUTES from '../../../constants/pagesRoutes'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ISignUp } from '../../../interfaces/interfaces'\r\nimport createUser from '../../../firebase/auth/createUser'\r\nimport isUsernameAvailable from '../../../firebase/auth/isUsernameAvailable'\r\nimport isEmailAvailable from '../../../firebase/auth/isEmailExist'\r\nimport { fetchUser } from '../../../redux/slices/userSlice/thunks/fetchUser'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\n\r\nconst SignUpForm:React.FC = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n    const [textForm, setTextForm] = useState<ISignUp>(\r\n        {\r\n            username: '',\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        }\r\n    )\r\n    const [error, setError] = useState<string>('')\r\n    const isValid = textForm.username.length > 4 && textForm.name.length > 1 &&  textForm.password.length > 6\r\n\r\n    const changeTextForm: (e: React.ChangeEvent<HTMLInputElement>) => void = (e) => {\r\n        const { name, value } = e.target\r\n        setTextForm((prevTextForm: ISignUp) => {\r\n            return {\r\n                ...prevTextForm,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const signUp: (e: React.MouseEvent<HTMLButtonElement>) => void = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await isUsernameAvailable(textForm.username)\r\n            await isEmailAvailable(textForm.email)\r\n            const userUID = await createUser(textForm)\r\n            dispatch(await fetchUser(userUID))\r\n            navigate(ROUTES.HOME)\r\n        }\r\n        catch (err: any) {\r\n            setError(err.message)\r\n            setTextForm(\r\n                {\r\n                    username: '',\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.section}>\r\n            <div className={styles.inner_container}>\r\n                <div className={styles.container} >\r\n                    <p className={styles.log_in}>Sign Up</p>\r\n                    {error.length > 0 && <p className={styles.error}>{error}</p>}\r\n                    <form method=\"POST\" className={styles.form}>\r\n                        <input\r\n                            value={textForm.username}\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                            onChange={(e) => changeTextForm(e)}\r\n                        />\r\n                        <input\r\n                            value={textForm.name}\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"name\"\r\n                            onChange={(e) => changeTextForm(e)}\r\n                        />\r\n                        <input\r\n                            value={textForm.email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            onChange={(e) => changeTextForm(e)}\r\n                        />\r\n                        <input\r\n                            value={textForm.password}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => changeTextForm(e)}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className={`${styles.btn_submit} ${isValid ? styles.btn_submit_active : styles.btn_submit_disabled}`}\r\n                            onClick={(e) => signUp(e)}\r\n                            disabled = {!isValid}\r\n                        >\r\n                            Sign Up\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className={styles.bottom_block}>\r\n                    <p className={styles.bottom_block_text}>\r\n                        Already have an account?\r\n                    </p>\r\n                    <button className={styles.bottom_block_btn} type=\"button\" onClick={() => navigate(`/${ROUTES.LOG_IN}`)}>Log in</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SignUpForm)\r\n","import React from 'react'\r\nimport Header from '../../components/Header/Header'\r\nimport SignUpForm from './SignUpForm/SignUpForm'\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SignUpForm />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SignUp)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"styles_section__GB1SD\",\"inner_container\":\"styles_inner_container__729Y+\",\"container\":\"styles_container__u6hak\",\"log_in\":\"styles_log_in__R9XaB\",\"error\":\"styles_error__oO2Et\",\"form\":\"styles_form__NWF8-\",\"btn_submit\":\"styles_btn_submit__CH6tm\",\"btn_submit_active\":\"styles_btn_submit_active__NWdgK\",\"btn_submit_disabled\":\"styles_btn_submit_disabled__PixOI\",\"bottom_block\":\"styles_bottom_block__eQCGu\",\"bottom_block_btn\":\"styles_bottom_block_btn__6Lvd1\"};"],"names":["Item","name","image","funcToDo","className","styles","onClick","alt","src","process","React","logOut","signOut","auth","ProfileDropMenu","activeModal","setActiveModal","dispatch","useAppDispatch","navigate","useNavigate","currentUser","useAppSelector","state","user","removeSignedUser","removeUser","navigateToSomewhere","link","setTimeout","allItems","uid","homeRoutes","map","elem","id","topAnimation","DropMenu","rigthPosition","Header","useState","isHovered","setIsHovered","ROUTES","onMouseEnter","onMouseLeave","username","isEmailAvailable","email","getDocs","collection","db","forEach","doc","data","Error","isUsernameAvailable","console","log","Date","getTime","toString","createUser","createUserWithEmailAndPassword","password","docUser","userToSet","recentSearch","createdAt","createDate","purchasesList","bio","myGames","favoriteGames","setDoc","SignUpForm","textForm","setTextForm","error","setError","isValid","length","changeTextForm","e","target","value","prevTextForm","signUp","preventDefault","userUID","fetchUser","message","method","type","placeholder","onChange","disabled","SignUp"],"sourceRoot":""}