{"version":3,"file":"static/js/266.38a20010.chunk.js","mappings":"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","sources":["webpack://game-store/./src/components/GoHomeButton/styles.module.scss?5b9c","components/GoHomeButton/GoHomeButton.tsx","webpack://game-store/./src/components/Loader/styles.module.scss?3ca6","components/Loader/Loader.tsx","webpack://game-store/./src/components/Modals/ReusebleModal/styles.module.scss?d4a2","components/Modals/ReusebleModal/ReusebleModal.tsx","webpack://game-store/./src/pages/Game/styles.module.scss?8fdd","pages/Game/GameOrder/stylesDiferentSizes.ts","webpack://game-store/./src/pages/Game/OrderModal/styles.module.scss?5827","firebase/games/getGameToOrder.ts","pages/Game/OrderModal/OrderModal.tsx","webpack://game-store/./src/pages/Game/OrderButton/styles.module.scss?aa93","pages/Game/OrderButton/OrderButton.tsx","webpack://game-store/./src/pages/Game/GameOrder/styles.module.scss?a6a5","pages/Game/GameOrder/GameOrder.tsx","webpack://game-store/./src/pages/Game/GameSuggestions/styles.module.scss?e970","helpers/hooks/useSuggestions.ts","webpack://game-store/./src/pages/Game/GameSuggestions/SuggestionItem/Button/styles.module.scss?3566","pages/Game/GameSuggestions/SuggestionItem/Button/Button.tsx","webpack://game-store/./src/pages/Game/GameSuggestions/SuggestionItem/styles.module.scss?1795","pages/Game/GameSuggestions/SuggestionItem/SuggestionItem.tsx","pages/Game/GameSuggestions/GameSuggestions.tsx","webpack://game-store/./src/pages/Game/GameText/styles.module.scss?5eb8","pages/Game/GameText/GameText.tsx","pages/Game/GamePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"styles_button__STCMt\"};","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype PropsType = {\r\n    text: string\r\n    funcNavigateTo: any\r\n}\r\n\r\nconst GoHomeButton:React.FC<PropsType> = ({text, funcNavigateTo}) => {\r\n  return (\r\n    <button type='button' className={styles.button} onClick={funcNavigateTo}>\r\n        {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(GoHomeButton)","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"styles_loader__qIjrJ\"};","import React from \"react\";\r\nimport styles from './styles.module.scss'\r\nimport { TailSpin } from 'react-loader-spinner'\r\n\r\ntype PropsType = {\r\n    height: string,\r\n    width: string\r\n}\r\n\r\nconst Loader: React.FC<PropsType> = ({ height, width }) => {\r\n    return (\r\n        <div className={styles.loader}>\r\n            <TailSpin height={height} width={width} color='rgba(120,120,120,150)' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Loader)","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"styles_active__HwliU\",\"hidden\":\"styles_hidden__ziD4Y\",\"windowBlock\":\"styles_windowBlock__k1M7+\",\"innerBlock\":\"styles_innerBlock__2xpOQ\",\"activeModal\":\"styles_activeModal__IlHVn\",\"hiddenModal\":\"styles_hiddenModal__HiX51\"};","import React from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks'\r\nimport { setModal } from '../../../redux/slices/modalSlice/modalSlice'\r\nimport styles from './styles.module.scss'\r\n\r\ntype PropsType = {\r\n    width: string\r\n    children: React.ReactNode\r\n}\r\n\r\nconst ReusebleModal: React.FC<PropsType> = ({ children, width }) => {\r\n\r\n    const activeModal = useAppSelector(state => state.modal.activeModal)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const toggleModal: () => void = () => {\r\n        dispatch(setModal(false))\r\n    }\r\n\r\n    return (\r\n        <div onClick={toggleModal} className={`${styles.windowBlock} ${activeModal ? styles.active : styles.hidden}`}>\r\n            <div style={{width: width}} onClick={(e) => e.stopPropagation()} className={`${styles.innerBlock} ${activeModal ? styles.activeModal : styles.hiddenModal}`}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ReusebleModal)","// extracted by mini-css-extract-plugin\nexport default {\"block_game\":\"styles_block_game__k+anX\",\"loader_block\":\"styles_loader_block__QHVaO\"};","export const stylesButton1 = {\r\n    fontSize: '24px',\r\n    height: '60px',\r\n    width: '290px'\r\n}\r\nexport const stylesButton2 = {\r\n    fontSize: '16px',\r\n    height: '40px',\r\n    width: '180px'\r\n}\r\n\r\nexport const stylesButton3 = {\r\n    fontSize: '14px',\r\n    height: '30px',\r\n    width: '120px'\r\n}\r\n\r\nexport const stylesFont1 = {\r\n    fontSize: '24px',\r\n    fontWeigth: '500',\r\n    height: '60px',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n}\r\nexport const stylesFont2 = {\r\n    fontSize: '16px',\r\n    fontWeigth: '500',\r\n    height: '40px',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n}\r\nexport const stylesFont3 = {\r\n    fontSize: '14px',\r\n    fontWeigth: '500',\r\n    height: '30px',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n}\r\n\r\nexport const favoriteStyle1 = {\r\n    height: '40px'\r\n}\r\n\r\nexport const favoriteStyle2 = {\r\n    height: '30px'\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"headerBlock\":\"styles_headerBlock__ruo54\",\"header\":\"styles_header__-pXTo\",\"game\":\"styles_game__xHnI+\",\"gameLeft\":\"styles_gameLeft__+tMua\",\"gamePhoto\":\"styles_gamePhoto__OOojz\",\"gameTitle\":\"styles_gameTitle__ve17W\",\"buttons\":\"styles_buttons__eJhST\",\"orderBtn\":\"styles_orderBtn__NmAI0\",\"active\":\"styles_active__lIC6m\",\"hidden\":\"styles_hidden__CqnhM\",\"gif\":\"styles_gif__lFBsw\"};","import { IGameItem } from './../../interfaces/interfaces';\r\nimport { getDoc, doc } from \"firebase/firestore\"\r\nimport { db } from \"../firebaseConfig\"\r\n\r\nconst getGameToOrder:(id:number) => Promise<IGameItem | null> = async (id) => {\r\n\r\n    const gameRef = doc(db, 'games', String(id))\r\n\r\n    const gameDoc = await getDoc(gameRef)\r\n\r\n    if(gameDoc.data()) {\r\n        return gameDoc.data() as IGameItem\r\n    } else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default getGameToOrder","import React, { useEffect, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport ReusebleModal from '../../../components/Modals/ReusebleModal/ReusebleModal'\r\nimport { IGameItem } from '../../../interfaces/interfaces'\r\nimport getGameToOrder from '../../../firebase/games/getGameToOrder'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport { orderGame } from '../../../redux/slices/userSlice/thunks/orderGame'\r\n\r\ntype PropsType = {\r\n    gameId: number\r\n}\r\n\r\nconst OrderModal: React.FC<PropsType> = ({ gameId }) => {\r\n    const [currentGame, setCurrentGame] = useState<IGameItem | null>(null)\r\n    const [activeBtn, setActiveBtn] = useState(true)\r\n    const [showSuccess, setShowSuccess] = useState<boolean>(false)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        const getGame = async () => {\r\n            const game = await getGameToOrder(gameId)\r\n            if (game) {\r\n                setCurrentGame(game)\r\n            }\r\n        }\r\n\r\n        getGame()\r\n    }, [gameId])\r\n\r\n    const buyGame = () => {\r\n        setActiveBtn(false)\r\n        setTimeout(async () => {\r\n            if (currentGame) {\r\n                dispatch(await orderGame(currentGame))\r\n                setShowSuccess(true)\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    return (\r\n        <ReusebleModal width='450px'>\r\n            {!currentGame ?\r\n                (\r\n                    <p>Loading...</p>\r\n                ) :\r\n                (\r\n                    showSuccess ?\r\n                        (\r\n                            <div className={styles.gif}>\r\n                                <img alt='success' src='/images/success.gif' />\r\n                                <p>Success order!</p>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n                                <div className={styles.headerBlock}>\r\n                                    <p className={styles.header}>Order Game</p>\r\n                                </div>\r\n                                <div className={styles.game}>\r\n                                    <div className={styles.gameLeft}>\r\n                                        <img alt='gamePhoto' src={currentGame.thumbnail} className={styles.gamePhoto} />\r\n                                        <div className={styles.gameTitle}>\r\n                                            <p className={styles.gameTitle}>{currentGame.title}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={styles.gameRigth}>\r\n                                        € {currentGame.price}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={styles.buttons}>\r\n                                    <button onClick={buyGame} disabled={!activeBtn} className={`${styles.orderBtn} ${activeBtn ? styles.active : styles.hidden}`}>\r\n                                        Order\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )\r\n\r\n                )\r\n            }\r\n\r\n        </ReusebleModal>\r\n    )\r\n}\r\n\r\nexport default React.memo(OrderModal)","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"styles_button__GcNwW\"};","import React from 'react'\r\nimport { useAppSelector, useAppDispatch } from '../../../redux/hooks'\r\nimport { setModal } from '../../../redux/slices/modalSlice/modalSlice'\r\nimport OrderModal from '../OrderModal/OrderModal'\r\nimport styles from './styles.module.scss'\r\n\r\ntype ObjectStyleType = {\r\n  fontSize?: string,\r\n  height?: string,\r\n  width?: string,\r\n  borderRadius?:string,\r\n}\r\n\r\ntype TextStyleType = {\r\n  color?: string,\r\n  fontWeigth?: string,\r\n  fontSize?: string,\r\n  height?: string\r\n}\r\n\r\ntype PropsType = {\r\n  gameId: number,\r\n  objectStyle: ObjectStyleType,\r\n  text: string,\r\n  textStyle: TextStyleType,\r\n}\r\n\r\nconst OrderButton: React.FC<PropsType> = ({ objectStyle, gameId, text, textStyle }) => {\r\n\r\n  const currentUser = useAppSelector(state => state.user.user)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const isBougth = currentUser.myGames.some(elem => elem.id === String(gameId))\r\n\r\n  return (\r\n    <>\r\n      {isBougth ?\r\n        (\r\n          <p style={textStyle}>BOUGTH</p>\r\n        ) :\r\n        (\r\n          <>\r\n            <button style={objectStyle} type='button' className={styles.button} onClick={() => dispatch(setModal(true))}>\r\n              {text}\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n\r\n      <OrderModal gameId={gameId} />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(OrderButton)","// extracted by mini-css-extract-plugin\nexport default {\"image_block\":\"styles_image_block__aQJoG\",\"blur\":\"styles_blur__MeLFU\",\"block\":\"styles_block__xvajG\",\"block_image_header\":\"styles_block_image_header__GJPTE\",\"block_buy\":\"styles_block_buy__VB3b6\",\"inner_block\":\"styles_inner_block__ECvRC\",\"platform\":\"styles_platform__pQlRH\",\"title\":\"styles_title__Qal+E\",\"short_desc\":\"styles_short_desc__J68GA\",\"releaseDate\":\"styles_releaseDate__8NHXb\",\"loader_block\":\"styles_loader_block__mbt6j\",\"inner_block_rigth\":\"styles_inner_block_rigth__7ZzKJ\"};","import React, { useState } from 'react'\r\nimport { stylesButton1, stylesButton2, stylesFont1, stylesFont2, stylesButton3, stylesFont3, favoriteStyle1, favoriteStyle2 } from './stylesDiferentSizes'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAppSelector } from '../../../redux/hooks'\r\nimport GoHomeButton from '../../../components/GoHomeButton/GoHomeButton'\r\nimport OrderButton from '../OrderButton/OrderButton'\r\nimport styles from './styles.module.scss'\r\nimport Favorite from '../../../components/Favorite/Favorite'\r\nimport Loader from '../../../components/Loader/Loader'\r\nimport useWindowSize from '../../../helpers/hooks/useWindowSize'\r\n\r\n\r\ntype ObjectStyle = {\r\n    fontSize: string,\r\n    height: string,\r\n    width: string,\r\n}\r\n\r\ntype TextStyle = {\r\n    height: string,\r\n    fontWeigth: string,\r\n    fontSize: string,\r\n    color: string,\r\n    textAlign: string,\r\n}\r\ntype FavoriteStyle = {\r\n    height: string,\r\n}\r\n\r\nconst GameOrder = () => {\r\n\r\n    const currentGame = useAppSelector(state => state.games.currentGame)\r\n    const navigate = useNavigate()\r\n    const { innerWidth } = useWindowSize()\r\n\r\n    let objectStyle:ObjectStyle | {} = {};\r\n    let textStyle:TextStyle | {} = {};\r\n    let favotiteStyles:FavoriteStyle | {} = {};\r\n\r\n    if(innerWidth > 1200) {\r\n        objectStyle = stylesButton1\r\n        textStyle = stylesFont1\r\n        favotiteStyles = favoriteStyle1\r\n    } else if (innerWidth < 1200 && innerWidth > 700) {\r\n        objectStyle = stylesButton2\r\n        textStyle = stylesFont2\r\n    } else if (innerWidth < 700) {\r\n        objectStyle = stylesButton3\r\n        textStyle = stylesFont3\r\n        favotiteStyles = favoriteStyle2\r\n    }\r\n\r\n    console.log(favotiteStyles)\r\n\r\n\r\n\r\n\r\n\r\n    if (!currentGame) {\r\n        return <div className={styles.loader_block}>\r\n            <Loader height='200px' width='200px' />\r\n        </div>\r\n    }\r\n    return (\r\n        <div className={styles.image_block} style={{ background: `url(${currentGame.thumbnail}) center`, backgroundSize: 'cover' }}>\r\n            <div className={styles.blur}></div>\r\n            <div className={styles.block}>\r\n                <div className={styles.block_image_header}>\r\n                    <GoHomeButton text='Go back' funcNavigateTo={() => navigate('/')} />\r\n                    <Favorite styleObject={favotiteStyles} game={currentGame} />\r\n                </div>\r\n                <div className={styles.block_buy}>\r\n                    <div className={styles.inner_block}>\r\n                        <div className={styles.inner_block_left}>\r\n                            <div className={styles.platform}>\r\n                                <p className={styles.platfrom_text}>{currentGame.platform}</p>\r\n                            </div>\r\n                            <p className={styles.title}>\r\n                                {currentGame.title}\r\n                            </p>\r\n                            <p className={styles.short_desc}>\r\n                                Created by {currentGame.developer}\r\n                            </p>\r\n                        </div>\r\n                        <div className={styles.inner_block_rigth}>\r\n                            <OrderButton\r\n                                text={`Order € ${currentGame.price}`}\r\n                                gameId={Number(currentGame.id)}\r\n                                objectStyle={objectStyle}\r\n                                textStyle={textStyle}\r\n                            />\r\n                            <p className={styles.releaseDate}>Release date: {currentGame.release_date}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GameOrder)","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__3BkM8\",\"suggestions_block\":\"styles_suggestions_block__RbYM4\",\"blockSlider\":\"styles_blockSlider__23zd0\",\"suggestions_block_items\":\"styles_suggestions_block_items__+dNTu\",\"other\":\"styles_other__kbfw9\"};","import { useAppSelector } from \"../../redux/hooks\"\r\nimport { IGameItem } from \"../../interfaces/interfaces\"\r\n\r\n\r\nconst useSuggestions = () => {\r\n    const allGames = useAppSelector(state => state.games.allGames)\r\n\r\n    const fetchGames:(gamesLength: number, curretGameId?:number) => IGameItem[] = (gamesLength: number, curretGameId?:number) => {\r\n        const helper = allGames.map(elem => elem).sort(() => 0.5 - Math.random()).slice(0, gamesLength)\r\n        if(curretGameId) {\r\n            return helper.filter(elem => elem.id !== String(curretGameId))\r\n        }\r\n\r\n        return helper\r\n    }\r\n\r\n    return { fetchGames }\r\n\r\n}\r\n\r\nexport default useSuggestions","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"styles_button__udVMN\"};","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype PropsType = {\r\n    text: string\r\n    funcNavigateTo: any\r\n}\r\n\r\nconst Button:React.FC<PropsType> = ({text, funcNavigateTo}) => {\r\n  return (\r\n    <button type='button' className={styles.button} onClick={funcNavigateTo}>\r\n        {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default React.memo(Button)","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"styles_block__rmMdZ\",\"image\":\"styles_image__rArJ8\",\"title\":\"styles_title__9fToN\",\"genre\":\"styles_genre__5QeBE\",\"platform\":\"styles_platform__fHUtU\",\"block_it\":\"styles_block_it__VwlVj\"};","import React from 'react'\r\nimport Button from './Button/Button'\r\nimport { IGameItem } from '../../../../interfaces/interfaces'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Favorite from '../../../../components/Favorite/Favorite'\r\nimport styles from './styles.module.scss'\r\n\r\ntype PropsType = {\r\n    game: IGameItem\r\n}\r\n\r\nconst SuggestionItem: React.FC<PropsType> = ({ game }) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.block_flex}>\r\n                <img alt='gamePhoto' src={game.thumbnail} className={styles.image} />\r\n                <p className={styles.title}>{game.title}</p>\r\n                <p className={styles.genre}>{game.genre}</p>\r\n                <p className={styles.platform}>{game.platform}</p>\r\n                <div className={styles.block_it}>\r\n                    <div>\r\n                        <Button text='More...' funcNavigateTo={() => navigate(`/games/${game.id}`)} />\r\n                    </div>\r\n                    <Favorite game={game} styleObject={{}} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SuggestionItem)","import React, { useEffect, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport useSuggestions from '../../../helpers/hooks/useSuggestions'\r\nimport SuggestionItem from './SuggestionItem/SuggestionItem'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Pagination, Scrollbar, A11y } from 'swiper';\r\nimport { IGameItem } from '../../../interfaces/interfaces'\r\nimport { useParams } from 'react-router-dom'\r\nimport useWindowSize from '../../../helpers/hooks/useWindowSize';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar'\r\n\r\n\r\nconst GameSuggestions: React.FC = () => {\r\n\r\n  const GAMES_TO_FETCH = 6\r\n  const { gameId } = useParams()\r\n  const { fetchGames } = useSuggestions()\r\n  const [suggestionsArray, setSuggestionsArray] = useState<IGameItem[]>([])\r\n  const { innerWidth } = useWindowSize()\r\n\r\n  useEffect(() => {\r\n    setSuggestionsArray(fetchGames(GAMES_TO_FETCH, Number(gameId)))\r\n  }, [])\r\n\r\n  const mappedArray = suggestionsArray.length > 0 && suggestionsArray.map(elem => <SwiperSlide key={elem.id}><SuggestionItem game={elem} /></SwiperSlide>)\r\n  let countVisibleSuggestions = 3\r\n\r\n  if (innerWidth < 1300 && innerWidth > 930) {\r\n    countVisibleSuggestions = 2\r\n  } else if (innerWidth < 930) {\r\n    countVisibleSuggestions = 1\r\n  }\r\n\r\n\r\n\r\n  console.log(suggestionsArray)\r\n\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <p className={styles.other}>Other games</p>\r\n      <div className={styles.blockSlider}>\r\n        <Swiper\r\n          modules={[Pagination, A11y, Scrollbar]}\r\n          slidesPerView={countVisibleSuggestions}\r\n          pagination={{ clickable: true }}\r\n          scrollbar={{ draggable: true }}\r\n          watchSlidesProgress={true}\r\n        >\r\n          <div className={styles.suggestions_block_items}>\r\n            {mappedArray}\r\n          </div>\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(GameSuggestions)","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"styles_block__+oM96\",\"left_section\":\"styles_left_section__01uz3\",\"left_section_title\":\"styles_left_section_title__QKdmW\",\"rigth_section\":\"styles_rigth_section__Ywtue\",\"rigth_text_block\":\"styles_rigth_text_block__QNUsi\",\"rigth_block_title\":\"styles_rigth_block_title__uoSSd\",\"rigth_block_text\":\"styles_rigth_block_text__o+Gzx\",\"rigth_text_bottom\":\"styles_rigth_text_bottom__7WGaQ\"};","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst GameText: React.FC = () => {\r\n\r\n    const mappedText = Array.from({ length: 4 }).fill(0).map((_, id) => <div key={id} className={styles.rigth_text_block}>\r\n        \r\n        <p className={styles.rigth_block_title}>\r\n            Lorem ipsum dolor sit amet consectetur.\r\n        </p>\r\n        <p className={styles.rigth_block_text}>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing.\r\n            Veniam dolor numquam error omnis ad consequatur.\r\n            Voluptatem modi voluptate error nihil, ea quos.\r\n            Ipsum voluptate quidem repellat optio voluptatum corrupti?\r\n            Consectetur sit, dolore voluptatibus quos nesciunt quaerat.\r\n            Tempore quae, cupiditate quis accusamus deleniti voluptatum!\r\n            Earum mollitia tempora ad fugit minus expedita?\r\n        </p>\r\n    </div>\r\n    )\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <div className={styles.left_section}>\r\n                <p className={styles.left_section_title}>\r\n                    Lorem ipsumet dolor sit amet.\r\n                </p>\r\n            </div>\r\n            <div className={styles.rigth_section}>\r\n                <p className={styles.rigth_block_text}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum ea distinctio dolore? Voluptatum, laborum culpa.</p>\r\n                {mappedText}\r\n                <p className={styles.rigth_text_bottom}>\r\n                    Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                    Itaque saepe molestiae hic non fuga repellat ad.\r\n                    Repudiandae repellat ab voluptate ex expedita porro tenetur.\r\n                    Adipisci unde voluptatibus velit neque rem consequuntur veniam.\r\n                    Exercitationem ipsa ipsum deserunt impedit saepe nulla fuga.\r\n                    Placeat, eos ea! Repellendus exercitationem dicta aliquam. Eius?\r\n                    Similique accusamus quos perspiciatis, fuga a deleniti nemo.\r\n                    Pariatur nobis vel at suscipit, laudantium optio. Iusto.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GameText)","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getCurrentGame } from '../../redux/slices/gameSlice/thunks/getCurrentGame'\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks'\r\nimport Loading from '../Loading/Loading'\r\nimport styles from './styles.module.scss'\r\nimport GameOrder from './GameOrder/GameOrder'\r\nimport GameSuggestions from './GameSuggestions/GameSuggestions'\r\nimport GameText from './GameText/GameText'\r\nimport Loader from '../../components/Loader/Loader'\r\n\r\nconst GamePage: React.FC = () => {\r\n\r\n    const currentGame = useAppSelector(state => state.games.currentGame)\r\n    const gameState = useAppSelector(state => state.games)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const { gameId } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (gameId) {\r\n            const getGame = async () => {\r\n                dispatch(await getCurrentGame(gameId))\r\n            }\r\n            getGame()\r\n        }\r\n\r\n    }, [gameId, dispatch])\r\n\r\n    if (gameState.status === 'loading' || !currentGame) {\r\n        return <div className={styles.loader_block}>\r\n            <Loader height='80px' width='80px' />\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.block_game}>\r\n            <GameOrder />\r\n            <GameText />\r\n            <GameSuggestions />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GamePage)\r\n"],"names":["GoHomeButton","text","funcNavigateTo","type","className","styles","onClick","React","Loader","height","width","color","ReusebleModal","children","activeModal","useAppSelector","state","modal","dispatch","useAppDispatch","setModal","style","e","stopPropagation","stylesButton1","fontSize","stylesButton2","stylesButton3","stylesFont1","fontWeigth","textAlign","stylesFont2","stylesFont3","favoriteStyle1","favoriteStyle2","getGameToOrder","id","gameRef","doc","db","String","getDoc","gameDoc","data","OrderModal","gameId","useState","currentGame","setCurrentGame","activeBtn","setActiveBtn","showSuccess","setShowSuccess","useEffect","getGame","game","alt","src","thumbnail","title","price","setTimeout","orderGame","disabled","OrderButton","objectStyle","textStyle","currentUser","user","isBougth","myGames","some","elem","GameOrder","games","navigate","useNavigate","innerWidth","useWindowSize","favotiteStyles","console","log","background","backgroundSize","Favorite","styleObject","platform","developer","Number","release_date","allGames","fetchGames","gamesLength","curretGameId","helper","map","sort","Math","random","slice","filter","Button","SuggestionItem","genre","GameSuggestions","useParams","useSuggestions","suggestionsArray","setSuggestionsArray","mappedArray","length","countVisibleSuggestions","modules","Pagination","A11y","Scrollbar","slidesPerView","pagination","clickable","scrollbar","draggable","watchSlidesProgress","GameText","mappedText","Array","from","fill","_","GamePage","gameState","getCurrentGame","status"],"sourceRoot":""}